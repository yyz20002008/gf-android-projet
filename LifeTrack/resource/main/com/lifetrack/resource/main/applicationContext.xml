<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd  
           http://www.springframework.org/schema/context  
           http://www.springframework.org/schema/context/spring-context-2.5.xsd  
           http://www.springframework.org/schema/aop  
           http://www.springframework.org/schema/aop/spring-aop-2.5.xsd  
           http://www.springframework.org/schema/tx   
           http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">  
    
    <!-- 用注解方式注入bean -->  
    <context:annotation-config/>  
    
    <!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
    <context:component-scan base-package="com.lifetrack"/>  
    
    <!-- 定义受环境影响易变的变量 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<!-- 标准配置 -->
				<value>classpath*:/application.properties</value>
				<!-- 集群中节点配置 -->
				<value>classpath*:/application.cluster.properties</value>
				<!-- 本地开发环境配置 -->
				<value>classpath*:/application.local.properties</value>
				<!-- 服务器生产环境配置 -->
				<!-- <value>file:/var/myapp/application.server.properties</value> -->
			</list>
		</property>
	</bean>
    
    
    <!-- 以下开始是数据源配置 -->
    <!-- 数据源配置,主要用于开发测试环境.配置见application.properties -->
	<bean id="lifeTrackDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${lt.url}" />
		<property name="user" value="${lt.username}" />
		<property name="password" value="${lt.password}" />

		<!-- Connection Pooling Info -->
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<property name="minPoolSize" value="${jdbc.minPoolSize}" />
		<property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}" />
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}" />
	</bean>
    
    
    
    
    <!-- hibernate sessionFactory 创建 -->   
     <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">  
        <property name="sessionFactory" ref="sessionFactory"></property>  
     </bean>  
     
     <!-- Hibernate配置 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="lifeTrackDataSource" />
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<!-- TODO：后期再重新审查相关设置。 
					<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop> 
					<prop key="hibernate.cache.provider_configuration_file_resource_path">${hibernate.ehcache_config_file}</prop> 
					<prop key="hibernate.cache.use_query_cache">false</prop> 
					<prop key="hibernate.cache.use_second_level_cache">true</prop> 
					<prop key="hibernate.cache.provider_class">com.googlecode.hibernate.memcached.MemcachedCacheProvider</prop> 
					<prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache-hibernate.xml</prop> 
					<prop key="hibernate.memcached.servers">tc-un-rd04.tc.baidu.com:11221 tc-un-rd03.tc.baidu.com:11221</prop> 
					<prop key="hibernate.memcached.cacheTimeSeconds">300</prop> 
					<prop key="hibernate.memcached.keyStrategy">HashCodeKeyStrategy</prop> 
					<prop key="hibernate.memcached.readBufferSize">DefaultConnectionFactory.DEFAULT_READ_BUFFER_SIZE</prop> 
					<prop key="hibernate.memcached.operationQueueLength">DefaultConnectionFactory.DEFAULT_OP_QUEUE_LEN</prop> 
					<prop key="hibernate.memcached.operationTimeout">DefaultConnectionFactory.DEFAULT_OPERATION_TIMEOUT</prop> 
					<prop key="hibernate.memcached.hashAlgorithm">KETAMA_HASH</prop> 
					<prop key="hibernate.memcached.clearSupported">false</prop> 
				-->
			</props>
		</property>
		<!-- <property name="packagesToScan" value="com.baidu.jn.*" /> -->
		<property name="packagesToScan">
			<list>
				<value>com.baidu.jn.entity.*</value>
				<value>com.baidu.jn.entity.*.*</value>
			</list>
		</property>
		<property name="entityInterceptor" ref="hibernateInterceptor"></property>
	</bean>     
    
     <!-- 事务配置 -->  
     <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory"></property>  
     </bean>  
     <tx:advice id="txAdvice" transaction-manager="transactionManager">  
        <tx:attributes>  
            <tx:method name="find*" read-only="true"/>  
            <tx:method name="add*" propagation="REQUIRED"/>  
        </tx:attributes>  
     </tx:advice>  
     <aop:config>  
        <aop:pointcut expression="execution(public * com.yj.service..*.*(..))" id="myPointcut"/>  
        <aop:advisor advice-ref="txAdvice" pointcut-ref="myPointcut"/>  
     </aop:config>  
       
</beans>  